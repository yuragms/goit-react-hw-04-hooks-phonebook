{"version":3,"sources":["Components/Container/Container.styled.jsx","Components/Container/Container.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/Contactlist.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App.js","index.js"],"names":["Container","styled","div","Title","h1","ContainerApp","children","ContactForm","form","Label","label","Input","input","Button","button","Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","reset","preventDefault","console","log","htmlFor","type","pattern","title","required","onChange","id","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","initialContacts","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","AddedContact","find","contact","toLowerCase","alert","prevState","includes","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12bb0538.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  padding: 10px 40px;\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport { Container, Title };\n","import { Container } from \"./Container.styled.jsx\";\n\nconst ContainerApp = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default ContainerApp;\n","import styled from \"@emotion/styled\";\n\nexport const ContactForm = styled.form`\n  display: block;\n  outline: 1px solid tomato;\n  max-width: 600px;\n  padding: 30px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 6px 13px;\n  background-color: white;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  font-size: 15px;\n  border-radius: 5px;\n  border-color: grey;\n`;\n","// import React, { Component } from \"react\";\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ContactForm, Label, Input, Button } from \"./ContactForm.styled\";\n\nfunction Form ({onSubmit}) {\n  // state = {\n  //   name: \"\",\n  //   number: \"\",\n  // };\n  const [name, setName] = useState('');\n  const [number, setNumber] =  useState('');\n\n const nameInputId = uuidv4();\n const numberInputId = uuidv4();\n\n  const handleChange = (e) => {\n    // this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n    const {name, value} = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n        case 'number':\n          setNumber(value);\n          break;\n\n          default: return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const { name, number } = this.state;\n    onSubmit(name, number);\n    console.log(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    // this.setState({ name: \"\" });\n    // this.setState({ number: \"\" });\n    setName('');\n    setNumber('');\n\n  };\n\n  \n    return (\n      <ContactForm onSubmit={handleSubmit}>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n          />\n        </Label>\n        <Label htmlFor={numberInputId}>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={numberInputId}\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </ContactForm>\n    );\n  \n}\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  outline: 1px solid tomato;\n  max-width: 600px;\n  padding: 30px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 6px 13px;\n  background-color: white;\n  font-size: 20px;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.4fr;\n  margin-bottom: 12px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\n\nimport { List, Item, Button } from \"./Contactlist.styled.jsx\";\n\nexport const ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <Item key={id}>\n        <span>{name}:</span> <span>{number}</span>\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </Button>\n      </Item>\n    ))}\n  </List>\n);\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: auto;\n`;\n","import React from \"react\";\n\nimport { Label, Input } from \"./Filter.styled.jsx\";\n\nexport const Filter = ({ value, onChange }) => (\n  <Label>\n    Find contacts by name\n    <Input type=\"text\" value={value} onChange={onChange} />\n  </Label>\n);\n","// import React, { Component } from \"react\";\nimport {useState, useEffect} from 'react';\nimport ContainerApp from \"./Container/Container.jsx\";\nimport Form from \"./ContactForm/ContactForm.jsx\";\nimport { Title } from \"./Container/Container.styled.jsx\";\nimport { ContactList } from \"./ContactList/ContactList.jsx\";\nimport { Filter } from \"./Filter/Filter.jsx\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App () {\n \n  const initialContacts = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ];\n\n  const[contacts, setContacts] = useState(()=> {\n     return JSON.parse(window.localStorage.getItem('contact')) ?? initialContacts; \n    });\n    const[filter, setFilter] = useState('');\n\n  const addContactApp = (name, number) => {\n    const AddedContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isRepeatableContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isRepeatableContact) {\n      alert(`${name} is alredy in contacts`);\n    } else {\n      setContacts(prevState => (\n         [AddedContact, ...prevState]\n      ));\n    }\n  };\n\n  const delContact = (contactId) => {\n    setContacts(prevContacts => \n      prevContacts.filter(\n        (contact) => contact.id !== contactId)\n    );\n  };\n\n  const onChangeFilter = (e) => {\n    setFilter(e.currentTarget.value );\n  };\n\n  const getFilteredContacts = () => {\n   \n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\nuseEffect(()=> {\n  console.log('App componentDidUpdate');\nwindow.localStorage.setItem('contact', JSON.stringify(contacts));\n},[contacts]);\n\n \n\n    return (\n      <ContainerApp>\n        <Title>Phonebook</Title>\n        <Form onSubmit={addContactApp} />\n        <Title>Contacts</Title>\n        <Filter value={filter} onChange={onChangeFilter} />\n        <ContactList\n          contacts={getFilteredContacts()}\n          onDeleteContact={delContact}\n        />\n      </ContainerApp>\n    );\n  \n}\n\nexport default App;\n\n\n\n\n\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   addContactApp = (name, number) => {\n//     const AddedContact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n//     const isRepeatableContact = this.state.contacts.find(\n//       (contact) => contact.name.toLowerCase() === name.toLowerCase()\n//     );\n//     if (isRepeatableContact) {\n//       alert(`${name} is alredy in contacts`);\n//     } else {\n//       this.setState((prevState) => ({\n//         contacts: [AddedContact, ...prevState.contacts],\n//       }));\n//     }\n//   };\n\n//   delContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   onChangeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   getFilteredContacts = () => {\n//     const { filter, contacts } = this.state;\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   componentDidMount() {\n//     console.log('App componentDidMount');\n\n//     const contacts = localStorage.getItem('contact');\n//     const parsedContacts = JSON.parse(contacts);\n\n//     console.log(parsedContacts);\n//     this.setState({contacts: parsedContacts});\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n// console.log('App componentDidUpdate');\n//     if(this.state.contacts !==prevState.contacts) {\n//       localStorage.setItem('contact', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <ContainerApp>\n//         <Title>Phonebook</Title>\n//         <Form onSubmit={this.addContactApp} />\n//         <Title>Contacts</Title>\n//         <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n//         <ContactList\n//           contacts={this.getFilteredContacts()}\n//           onDeleteContact={this.delContact}\n//         />\n//       </ContainerApp>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}